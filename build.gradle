/**
 * @author bush & perry.
 * @description Original by bush & fully remade by perry. This is the best anarchy Gradle sad that retarded 13-14 yr OyVey skidders can't come close to comparing -perry.
 */
//file:noinspection GroovyAssignabilityCheck I don't like warnings!!!! fuck you nigga!!!
//file:noinspection GroovyUnusedAssignment I don't like warnings!!!! fuck you nigga!!!
buildscript {
    repositories {
        mavenCentral()

        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3.4'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = '1.0.0'
group = 'cope.name'
archivesBaseName = 'ClientBase'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding 'UTF-8'
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    mappings = 'stable_39'
    makeObfSourceJar = false

    clientJvmArgs += '-Dfml.coreMods.load=cope.name.asm.MixinLoadingPlugin'
    clientRunArgs += '--mixin mixins.base.json'
}

mixin {
    defaultObfuscationEnv searge
    sourceSets {
        main {
            ext.refMap = 'mixins.inferno.refmap.json'
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spongepowered.org/maven' }
}

configurations {
    embed
    compile.extendsFrom embed
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }

    annotationProcessor("org.spongepowered:mixin:0.8.2:processor") {
        exclude module: 'gson'
    }
}

//processResources {
//    inputs.property 'version', project.version
//
//    from(sourceSets.main.resources.srcDirs) {
//        include 'mcmod.info'
//        // Replace version.
//        expand 'version': project.version
//    }
//
//    from(sourceSets.main.resources.srcDirs) {
//        exclude 'mcmod.info'
//    }
//
//    rename '(.+_at.cfg)', 'META-INF/$1'
//}

jar {
    from(configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude 'dummyThing',
                'LICENSE.txt',
                'META-INF/MUMFREY.RSA',
                'META-INF/maven/**',
                'org/**/*.html'
    }

    manifest.attributes(
            'MixinConfigs': 'mixins.base.json',
            // 'FMLAT': 'inferno_at.cfg', // UNCOMMENT IF USING ACCESS TRANSFORMERS
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'FMLCorePlugin': 'cope.name.asm.MixinLoadingPlugin',
            'ForceLoadAsMod': 'true'
    )
}